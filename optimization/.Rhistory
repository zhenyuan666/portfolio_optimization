all_symbols <- all_symbols
all_data <- all_data[,-1] # the first column is used make a matrix, delete it now
write.table(all_data, file = "sp500_monthlyreturn_19860101_19921231_withnames.csv", sep=",")
write.table(all_data, file = "sp500_monthlyreturn_19860101_19921231_nonames.csv", row.names = F, col.names=F, sep=",")
View(all_data)
setwd('/Users/zhenyuanliu/Dropbox/Spring2017/stat222/optimization')
# change here
spComp <- read.csv("sp500_constituents.csv" )
dateStart <- "2002-01-01"  # change start data here
dateEnd <- "2009-01-01"  # change end data here
num_data <- 72 # change total number of records for each stock here
symbols <- as.character(spComp[, 1]) # symbol of 504 sp500 stocks
nAss <- length(symbols)
all_data <- matrix(0, num_data, 1)
all_symbols <- c("empty")
num_notdownloadble <- 0
num_no_full_records <- 0
for (i in 1:nAss){
j = symbols[i]
#str1 <- paste("apply.monthly(" , j , ", function(x) x[1])[,6]")   #first adjusted price of each month
str1 <- paste("monthlyReturn(", j, ")") # monthly return
tryCatch({
getSymbols(j, src = "yahoo", from = as.Date(dateStart), to = as.Date(dateEnd))
haha <- eval(parse(text = str1)) # this is stupid, but what else can i do?
price_monthly <- as.matrix(haha)
rm(haha)
removeSymbols()
if(dim(price_monthly)[1] == num_data){
all_data <- cbind(all_data, price_monthly)
all_symbols <- c(all_symbols, j)
} else{
num_no_full_records <- num_no_full_records + 1
cat("Symbol '", j, "' doesn't have full records\n", sep = "")
}
},
error = function(err) {
num_notdownloadble <- num_notdownloadble + 1# this is not correct somehow
cat("Symbol '", j, "' not downloadable!\n", sep = "")
}
)
}
# post processing the data to monthly return and then write to csv
all_symbols <- all_symbols
all_data <- all_data[,-1] # the first column is used make a matrix, delete it now
write.table(all_data, file = "sp500_monthlyreturn_20020101_20081231_withnames.csv", sep=",")
write.table(all_data, file = "sp500_monthlyreturn_20020101_20081231_nonames.csv", row.names = F, col.names=F, sep=",")
setwd('/Users/zhenyuanliu/Dropbox/Spring2017/stat222/optimization')
# change here
spComp <- read.csv("sp500_constituents.csv" )
dateStart <- "2003-01-01"  # change start data here
dateEnd <- "2009-01-01"  # change end data here
num_data <- 72 # change total number of records for each stock here
symbols <- as.character(spComp[, 1]) # symbol of 504 sp500 stocks
nAss <- length(symbols)
all_data <- matrix(0, num_data, 1)
all_symbols <- c("empty")
num_notdownloadble <- 0
num_no_full_records <- 0
for (i in 1:nAss){
j = symbols[i]
#str1 <- paste("apply.monthly(" , j , ", function(x) x[1])[,6]")   #first adjusted price of each month
str1 <- paste("monthlyReturn(", j, ")") # monthly return
tryCatch({
getSymbols(j, src = "yahoo", from = as.Date(dateStart), to = as.Date(dateEnd))
haha <- eval(parse(text = str1)) # this is stupid, but what else can i do?
price_monthly <- as.matrix(haha)
rm(haha)
removeSymbols()
if(dim(price_monthly)[1] == num_data){
all_data <- cbind(all_data, price_monthly)
all_symbols <- c(all_symbols, j)
} else{
num_no_full_records <- num_no_full_records + 1
cat("Symbol '", j, "' doesn't have full records\n", sep = "")
}
},
error = function(err) {
num_notdownloadble <- num_notdownloadble + 1# this is not correct somehow
cat("Symbol '", j, "' not downloadable!\n", sep = "")
}
)
}
# post processing the data to monthly return and then write to csv
all_symbols <- all_symbols
all_data <- all_data[,-1] # the first column is used make a matrix, delete it now
write.table(all_data, file = "sp500_monthlyreturn_20020101_20081231_withnames.csv", sep=",")
write.table(all_data, file = "sp500_monthlyreturn_20020101_20081231_nonames.csv", row.names = F, col.names=F, sep=",")
View(all_data)
all_symbols <- all_symbols
all_data <- all_data[,-1] # the first column is used make a matrix, delete it now
write.table(all_data, file = "sp500_monthlyreturn_20020101_20090101_withnames.csv", sep=",")
write.table(all_data, file = "sp500_monthlyreturn_20020101_20090101_nonames.csv", row.names = F, col.names=F, sep=",")
rm(list = ls())
require('quantmod')
require('xts')
# change here
setwd('/Users/zhenyuanliu/Dropbox/Spring2017/stat222/optimization')
# change here
spComp <- read.csv("sp500_constituents.csv" )
dateStart <- "1991-01-01"  # change start data here
dateEnd <- "1997-01-01"  # change end data here
num_data <- 72 # change total number of records for each stock here
symbols <- as.character(spComp[, 1]) # symbol of 504 sp500 stocks
nAss <- length(symbols)
all_data <- matrix(0, num_data, 1)
all_symbols <- c("empty")
num_notdownloadble <- 0
num_no_full_records <- 0
for (i in 1:nAss){
j = symbols[i]
#str1 <- paste("apply.monthly(" , j , ", function(x) x[1])[,6]")   #first adjusted price of each month
str1 <- paste("monthlyReturn(", j, ")") # monthly return
tryCatch({
getSymbols(j, src = "yahoo", from = as.Date(dateStart), to = as.Date(dateEnd))
haha <- eval(parse(text = str1)) # this is stupid, but what else can i do?
price_monthly <- as.matrix(haha)
rm(haha)
removeSymbols()
if(dim(price_monthly)[1] == num_data){
all_data <- cbind(all_data, price_monthly)
all_symbols <- c(all_symbols, j)
} else{
num_no_full_records <- num_no_full_records + 1
cat("Symbol '", j, "' doesn't have full records\n", sep = "")
}
},
error = function(err) {
num_notdownloadble <- num_notdownloadble + 1# this is not correct somehow
cat("Symbol '", j, "' not downloadable!\n", sep = "")
}
)
}
# post processing the data to monthly return and then write to csv
all_symbols <- all_symbols
all_data <- all_data[,-1] # the first column is used make a matrix, delete it now
#write.table(all_data, file = "sp500_monthlyreturn_19910101_19970101_withnames.csv", sep=",")
write.table(all_data, file = "sp500_monthlyreturn_19910101_19970101_nonames.csv", row.names = F, col.names=F, sep=",")
View(all_data)
rm(list = ls())
require('quantmod')
require('xts')
# change here
setwd('/Users/zhenyuanliu/Dropbox/Spring2017/stat222/optimization')
# change here
spComp <- read.csv("sp500_constituents.csv" )
dateStart <- "1992-01-01"  # change start data here
dateEnd <- "1998-01-01"  # change end data here
num_data <- 72 # change total number of records for each stock here
symbols <- as.character(spComp[, 1]) # symbol of 504 sp500 stocks
nAss <- length(symbols)
all_data <- matrix(0, num_data, 1)
all_symbols <- c("empty")
num_notdownloadble <- 0
num_no_full_records <- 0
for (i in 1:nAss){
j = symbols[i]
#str1 <- paste("apply.monthly(" , j , ", function(x) x[1])[,6]")   #first adjusted price of each month
str1 <- paste("monthlyReturn(", j, ")") # monthly return
tryCatch({
getSymbols(j, src = "yahoo", from = as.Date(dateStart), to = as.Date(dateEnd))
haha <- eval(parse(text = str1)) # this is stupid, but what else can i do?
price_monthly <- as.matrix(haha)
rm(haha)
removeSymbols()
if(dim(price_monthly)[1] == num_data){
all_data <- cbind(all_data, price_monthly)
all_symbols <- c(all_symbols, j)
} else{
num_no_full_records <- num_no_full_records + 1
cat("Symbol '", j, "' doesn't have full records\n", sep = "")
}
},
error = function(err) {
num_notdownloadble <- num_notdownloadble + 1# this is not correct somehow
cat("Symbol '", j, "' not downloadable!\n", sep = "")
}
)
}
# post processing the data to monthly return and then write to csv
all_symbols <- all_symbols
all_data <- all_data[,-1] # the first column is used make a matrix, delete it now
#write.table(all_data, file = "sp500_monthlyreturn_19920101_19980101_withnames.csv", sep=",")
write.table(all_data, file = "sp500_monthlyreturn_19920101_19980101_nonames.csv", row.names = F, col.names=F, sep=",")
rm(list = ls())
require('quantmod')
require('xts')
# change here
setwd('/Users/zhenyuanliu/Dropbox/Spring2017/stat222/optimization')
# change here
spComp <- read.csv("sp500_constituents.csv" )
dateStart <- "1993-01-01"  # change start data here
dateEnd <- "1999-01-01"  # change end data here
num_data <- 72 # change total number of records for each stock here
symbols <- as.character(spComp[, 1]) # symbol of 504 sp500 stocks
nAss <- length(symbols)
all_data <- matrix(0, num_data, 1)
all_symbols <- c("empty")
num_notdownloadble <- 0
num_no_full_records <- 0
for (i in 1:nAss){
j = symbols[i]
#str1 <- paste("apply.monthly(" , j , ", function(x) x[1])[,6]")   #first adjusted price of each month
str1 <- paste("monthlyReturn(", j, ")") # monthly return
tryCatch({
getSymbols(j, src = "yahoo", from = as.Date(dateStart), to = as.Date(dateEnd))
haha <- eval(parse(text = str1)) # this is stupid, but what else can i do?
price_monthly <- as.matrix(haha)
rm(haha)
removeSymbols()
if(dim(price_monthly)[1] == num_data){
all_data <- cbind(all_data, price_monthly)
all_symbols <- c(all_symbols, j)
} else{
num_no_full_records <- num_no_full_records + 1
cat("Symbol '", j, "' doesn't have full records\n", sep = "")
}
},
error = function(err) {
num_notdownloadble <- num_notdownloadble + 1# this is not correct somehow
cat("Symbol '", j, "' not downloadable!\n", sep = "")
}
)
}
# post processing the data to monthly return and then write to csv
all_symbols <- all_symbols
all_data <- all_data[,-1] # the first column is used make a matrix, delete it now
#write.table(all_data, file = "sp500_monthlyreturn_19930101_19990101_withnames.csv", sep=",")
write.table(all_data, file = "sp500_monthlyreturn_19930101_19990101_nonames.csv", row.names = F, col.names=F, sep=",")
rm(list = ls())
require('quantmod')
require('xts')
# change here
setwd('/Users/zhenyuanliu/Dropbox/Spring2017/stat222/optimization')
# change here
spComp <- read.csv("sp500_constituents.csv" )
dateStart <- "1994-01-01"  # change start data here
dateEnd <- "2000-01-01"  # change end data here
num_data <- 72 # change total number of records for each stock here
symbols <- as.character(spComp[, 1]) # symbol of 504 sp500 stocks
nAss <- length(symbols)
all_data <- matrix(0, num_data, 1)
all_symbols <- c("empty")
num_notdownloadble <- 0
num_no_full_records <- 0
for (i in 1:nAss){
j = symbols[i]
#str1 <- paste("apply.monthly(" , j , ", function(x) x[1])[,6]")   #first adjusted price of each month
str1 <- paste("monthlyReturn(", j, ")") # monthly return
tryCatch({
getSymbols(j, src = "yahoo", from = as.Date(dateStart), to = as.Date(dateEnd))
haha <- eval(parse(text = str1)) # this is stupid, but what else can i do?
price_monthly <- as.matrix(haha)
rm(haha)
removeSymbols()
if(dim(price_monthly)[1] == num_data){
all_data <- cbind(all_data, price_monthly)
all_symbols <- c(all_symbols, j)
} else{
num_no_full_records <- num_no_full_records + 1
cat("Symbol '", j, "' doesn't have full records\n", sep = "")
}
},
error = function(err) {
num_notdownloadble <- num_notdownloadble + 1# this is not correct somehow
cat("Symbol '", j, "' not downloadable!\n", sep = "")
}
)
}
# post processing the data to monthly return and then write to csv
all_symbols <- all_symbols
all_data <- all_data[,-1] # the first column is used make a matrix, delete it now
#write.table(all_data, file = "sp500_monthlyreturn_19940101_20000101_withnames.csv", sep=",")
write.table(all_data, file = "sp500_monthlyreturn_19940101_20000101_nonames.csv", row.names = F, col.names=F, sep=",")
# retieves all the sp500 constituents stock historic prices(504 stocks)
rm(list = ls())
require('quantmod')
require('xts')
# change here
setwd('/Users/zhenyuanliu/Dropbox/Spring2017/stat222/optimization')
# change here
spComp <- read.csv("sp500_constituents.csv" )
dateStart <- "1995-01-01"  # change start data here
dateEnd <- "2001-01-01"  # change end data here
num_data <- 72 # change total number of records for each stock here
symbols <- as.character(spComp[, 1]) # symbol of 504 sp500 stocks
nAss <- length(symbols)
all_data <- matrix(0, num_data, 1)
all_symbols <- c("empty")
num_notdownloadble <- 0
num_no_full_records <- 0
for (i in 1:nAss){
j = symbols[i]
#str1 <- paste("apply.monthly(" , j , ", function(x) x[1])[,6]")   #first adjusted price of each month
str1 <- paste("monthlyReturn(", j, ")") # monthly return
tryCatch({
getSymbols(j, src = "yahoo", from = as.Date(dateStart), to = as.Date(dateEnd))
haha <- eval(parse(text = str1)) # this is stupid, but what else can i do?
price_monthly <- as.matrix(haha)
rm(haha)
removeSymbols()
if(dim(price_monthly)[1] == num_data){
all_data <- cbind(all_data, price_monthly)
all_symbols <- c(all_symbols, j)
} else{
num_no_full_records <- num_no_full_records + 1
cat("Symbol '", j, "' doesn't have full records\n", sep = "")
}
},
error = function(err) {
num_notdownloadble <- num_notdownloadble + 1# this is not correct somehow
cat("Symbol '", j, "' not downloadable!\n", sep = "")
}
)
}
# post processing the data to monthly return and then write to csv
all_symbols <- all_symbols
all_data <- all_data[,-1] # the first column is used make a matrix, delete it now
#write.table(all_data, file = "sp500_monthlyreturn_19950101_20010101_withnames.csv", sep=",")
write.table(all_data, file = "sp500_monthlyreturn_19950101_20010101_nonames.csv", row.names = F, col.names=F, sep=",")
rm(list = ls())
require('quantmod')
require('xts')
# change here
setwd('/Users/zhenyuanliu/Dropbox/Spring2017/stat222/optimization')
# change here
spComp <- read.csv("sp500_constituents.csv" )
dateStart <- "1996-01-01"  # change start data here
dateEnd <- "2002-01-01"  # change end data here
num_data <- 72 # change total number of records for each stock here
symbols <- as.character(spComp[, 1]) # symbol of 504 sp500 stocks
nAss <- length(symbols)
all_data <- matrix(0, num_data, 1)
all_symbols <- c("empty")
num_notdownloadble <- 0
num_no_full_records <- 0
for (i in 1:nAss){
j = symbols[i]
#str1 <- paste("apply.monthly(" , j , ", function(x) x[1])[,6]")   #first adjusted price of each month
str1 <- paste("monthlyReturn(", j, ")") # monthly return
tryCatch({
getSymbols(j, src = "yahoo", from = as.Date(dateStart), to = as.Date(dateEnd))
haha <- eval(parse(text = str1)) # this is stupid, but what else can i do?
price_monthly <- as.matrix(haha)
rm(haha)
removeSymbols()
if(dim(price_monthly)[1] == num_data){
all_data <- cbind(all_data, price_monthly)
all_symbols <- c(all_symbols, j)
} else{
num_no_full_records <- num_no_full_records + 1
cat("Symbol '", j, "' doesn't have full records\n", sep = "")
}
},
error = function(err) {
num_notdownloadble <- num_notdownloadble + 1# this is not correct somehow
cat("Symbol '", j, "' not downloadable!\n", sep = "")
}
)
}
# post processing the data to monthly return and then write to csv
all_symbols <- all_symbols
all_data <- all_data[,-1] # the first column is used make a matrix, delete it now
#write.table(all_data, file = "sp500_monthlyreturn_19960101_20020101_withnames.csv", sep=",")
write.table(all_data, file = "sp500_monthlyreturn_19960101_20020101_nonames.csv", row.names = F, col.names=F, sep=",")
rm(list = ls())
require('quantmod')
require('xts')
# change here
setwd('/Users/zhenyuanliu/Dropbox/Spring2017/stat222/optimization')
# change here
spComp <- read.csv("sp500_constituents.csv" )
dateStart <- "1997-01-01"  # change start data here
dateEnd <- "2003-01-01"  # change end data here
num_data <- 72 # change total number of records for each stock here
symbols <- as.character(spComp[, 1]) # symbol of 504 sp500 stocks
nAss <- length(symbols)
all_data <- matrix(0, num_data, 1)
all_symbols <- c("empty")
num_notdownloadble <- 0
num_no_full_records <- 0
for (i in 1:nAss){
j = symbols[i]
#str1 <- paste("apply.monthly(" , j , ", function(x) x[1])[,6]")   #first adjusted price of each month
str1 <- paste("monthlyReturn(", j, ")") # monthly return
tryCatch({
getSymbols(j, src = "yahoo", from = as.Date(dateStart), to = as.Date(dateEnd))
haha <- eval(parse(text = str1)) # this is stupid, but what else can i do?
price_monthly <- as.matrix(haha)
rm(haha)
removeSymbols()
if(dim(price_monthly)[1] == num_data){
all_data <- cbind(all_data, price_monthly)
all_symbols <- c(all_symbols, j)
} else{
num_no_full_records <- num_no_full_records + 1
cat("Symbol '", j, "' doesn't have full records\n", sep = "")
}
},
error = function(err) {
num_notdownloadble <- num_notdownloadble + 1# this is not correct somehow
cat("Symbol '", j, "' not downloadable!\n", sep = "")
}
)
}
# post processing the data to monthly return and then write to csv
all_symbols <- all_symbols
all_data <- all_data[,-1] # the first column is used make a matrix, delete it now
#write.table(all_data, file = "sp500_monthlyreturn_19970101_20030101_withnames.csv", sep=",")
write.table(all_data, file = "sp500_monthlyreturn_19970101_20030101_nonames.csv", row.names = F, col.names=F, sep=",")
d = 1998
str(d)
toString(d)
toString(d) + "dddd"
paste(toString(111), "ssss" )
paste(toString(111),"ssss" )
paste(toString(111),"ssss",sep ="" )
rm(list = ls())
require('quantmod')
require('xts')
for( i in 1998:2010){
# change here
setwd('/Users/zhenyuanliu/Dropbox/Spring2017/stat222/optimization')
# change here
spComp <- read.csv("sp500_constituents.csv" )
dateStart <- paste(toString(i), "-01-01",sep ="")  # change start data here
dateEnd <- paste(toString(i+6), "-01-01",sep ="")   # change end data here
num_data <- 72 # change total number of records for each stock here
symbols <- as.character(spComp[, 1]) # symbol of 504 sp500 stocks
nAss <- length(symbols)
all_data <- matrix(0, num_data, 1)
all_symbols <- c("empty")
num_notdownloadble <- 0
num_no_full_records <- 0
for (i in 1:nAss){
j = symbols[i]
#str1 <- paste("apply.monthly(" , j , ", function(x) x[1])[,6]")   #first adjusted price of each month
str1 <- paste("monthlyReturn(", j, ")") # monthly return
tryCatch({
getSymbols(j, src = "yahoo", from = as.Date(dateStart), to = as.Date(dateEnd))
haha <- eval(parse(text = str1)) # this is stupid, but what else can i do?
price_monthly <- as.matrix(haha)
rm(haha)
removeSymbols()
if(dim(price_monthly)[1] == num_data){
all_data <- cbind(all_data, price_monthly)
all_symbols <- c(all_symbols, j)
} else{
num_no_full_records <- num_no_full_records + 1
cat("Symbol '", j, "' doesn't have full records\n", sep = "")
}
},
error = function(err) {
num_notdownloadble <- num_notdownloadble + 1# this is not correct somehow
cat("Symbol '", j, "' not downloadable!\n", sep = "")
}
)
}
# post processing the data to monthly return and then write to csv
all_symbols <- all_symbols
all_data <- all_data[,-1] # the first column is used make a matrix, delete it now
#write.table(all_data, file = "sp500_monthlyreturn_19970101_20030101_withnames.csv", sep=",")
filename =  paste("sp500_monthlyreturn_", toString(i), "0101_",toString(i+6), "0101_nonames.csv", sep ="")
write.table(all_data, file = filename, row.names = F, col.names=F, sep=",")
}
rm(list = ls())
require('quantmod')
require('xts')
for( time in 1998:2010){
# change here
setwd('/Users/zhenyuanliu/Dropbox/Spring2017/stat222/optimization')
# change here
spComp <- read.csv("sp500_constituents.csv" )
dateStart <- paste(toString(time), "-01-01",sep ="")  # change start data here
dateEnd <- paste(toString(time+6), "-01-01",sep ="")   # change end data here
num_data <- 72 # change total number of records for each stock here
symbols <- as.character(spComp[, 1]) # symbol of 504 sp500 stocks
nAss <- length(symbols)
all_data <- matrix(0, num_data, 1)
all_symbols <- c("empty")
num_notdownloadble <- 0
num_no_full_records <- 0
for (i in 1:nAss){
j = symbols[i]
#str1 <- paste("apply.monthly(" , j , ", function(x) x[1])[,6]")   #first adjusted price of each month
str1 <- paste("monthlyReturn(", j, ")") # monthly return
tryCatch({
getSymbols(j, src = "yahoo", from = as.Date(dateStart), to = as.Date(dateEnd))
haha <- eval(parse(text = str1)) # this is stupid, but what else can i do?
price_monthly <- as.matrix(haha)
rm(haha)
removeSymbols()
if(dim(price_monthly)[1] == num_data){
all_data <- cbind(all_data, price_monthly)
all_symbols <- c(all_symbols, j)
} else{
num_no_full_records <- num_no_full_records + 1
cat("Symbol '", j, "' doesn't have full records\n", sep = "")
}
},
error = function(err) {
num_notdownloadble <- num_notdownloadble + 1# this is not correct somehow
cat("Symbol '", j, "' not downloadable!\n", sep = "")
}
)
}
# post processing the data to monthly return and then write to csv
all_symbols <- all_symbols
all_data <- all_data[,-1] # the first column is used make a matrix, delete it now
#write.table(all_data, file = "sp500_monthlyreturn_19970101_20030101_withnames.csv", sep=",")
filename =  paste("sp500_monthlyreturn_", toString(time), "0101_",toString(time+6), "0101_nonames.csv", sep ="")
write.table(all_data, file = filename, row.names = F, col.names=F, sep=",")
}
